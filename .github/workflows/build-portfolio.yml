name: 🚀 Build Portfolio Images

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME_API: lahonda27/stocktrader/stocktrader-api
  IMAGE_NAME_FRONTEND: lahonda27/stocktrader/stocktrader-frontend

jobs:
  test-and-validate:
    runs-on: ubuntu-latest
    name: 🧪 Tests & Validation
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔧 Setup .NET 9
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'

    - name: 🔧 Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: 🔨 Build Backend
      run: |
        cd backend/StockTrader.API
        dotnet restore
        dotnet build --no-restore
        echo "✅ Backend build successful"

    - name: 🔨 Build Frontend
      run: |
        cd frontend
        npm ci
        npm run build
        echo "✅ Frontend build successful"

  build-docker-images:
    runs-on: ubuntu-latest
    needs: [test-and-validate]
    name: 🐳 Build Docker Images
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔑 Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: 🐳 Build and push API Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./backend/StockTrader.API
        file: ./backend/StockTrader.API/Dockerfile
        push: true
        tags: ghcr.io/lahonda27/stocktrader/stocktrader-api:latest

    - name: 🐳 Build and push Frontend Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ghcr.io/lahonda27/stocktrader/stocktrader-frontend:latest

  # 🎯 Release avec permissions correctes
  create-release:
    runs-on: ubuntu-latest
    needs: [build-docker-images]
    if: github.ref == 'refs/heads/main'
    name: 🎯 Create Release
    
    # 🔐 Permissions nécessaires pour créer une release
    permissions:
      contents: write  # ← Important pour créer des releases
      packages: read
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🏷️ Create release tag
      id: tag
      run: |
        TAG="v$(date +'%Y.%m.%d')-$(echo ${{ github.sha }} | cut -c1-7)"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Generated tag: $TAG"

    # 🆕 Utiliser une action plus récente
    - name: 🎉 Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: 🚀 StockTrader ${{ steps.tag.outputs.tag }}
        body: |
          # 🎯 StockTrader - Plateforme de Trading Simulée
          
          ## 🚀 Lancement rapide pour recruteurs
          
          ```bash
          # Une seule commande pour tout lancer :
          curl -fsSL https://raw.githubusercontent.com/lahonda27/stocktrader/main/quick-start.sh | bash
          ```
          
          ## 🔗 Accès direct
          - 🌐 **Application**: http://localhost:3000
          - 📚 **API Swagger**: http://localhost:5172/swagger
          - 📊 **Fonctionnalités**: Trading en temps réel avec SignalR
          
          ## 🛠️ Stack technique
          - ✅ **Backend**: .NET 9 + Entity Framework + SignalR
          - ✅ **Frontend**: React 18 + TypeScript + Tailwind CSS
          - ✅ **Database**: SQL Server
          - ✅ **Real-time**: WebSockets pour prix en temps réel
          - ✅ **Container**: Docker + Docker Compose
          
          ## 📦 Images Docker
          - API: `ghcr.io/lahonda27/stocktrader/stocktrader-api:latest`
          - Frontend: `ghcr.io/lahonda27/stocktrader/stocktrader-frontend:latest`
          
          ## 🚀 Utilisation
          
          ### Option 1: Script automatique
          ```bash
          curl -fsSL https://raw.githubusercontent.com/lahonda27/stocktrader/main/quick-start.sh | bash
          ```
          
          ### Option 2: Docker Compose manuel
          ```bash
          curl -o docker-compose.yml https://raw.githubusercontent.com/lahonda27/stocktrader/main/docker-compose.production.yml
          docker-compose up -d
          ```
          
          ## 👤 Compte demo
          - **Email**: demo@stocktrader.com
          - **Mot de passe**: Demo123!
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
